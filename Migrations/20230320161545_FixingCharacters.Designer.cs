// <auto-generated />
using System;
using GenshinApplication.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenshinApplication.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230320161545_FixingCharacters")]
    partial class FixingCharacters
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GenshinApplication.Models.Artifacts", b =>
                {
                    b.Property<Guid>("ArtifactsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetBonusOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetBonusTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("ArtifactsId");

                    b.ToTable("Artifacts");
                });

            modelBuilder.Entity("GenshinApplication.Models.Build", b =>
                {
                    b.Property<Guid>("BuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharactersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CircletArtifactsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FlowerArtifactsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GobletArtifactsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlumeArtifactsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SandsArtifactsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("WeaponId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BuildId");

                    b.HasIndex("CharactersId");

                    b.HasIndex("CircletArtifactsId");

                    b.HasIndex("FlowerArtifactsId");

                    b.HasIndex("GobletArtifactsId");

                    b.HasIndex("PlumeArtifactsId");

                    b.HasIndex("SandsArtifactsId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Build");
                });

            modelBuilder.Entity("GenshinApplication.Models.Characters", b =>
                {
                    b.Property<Guid>("CharactersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Element")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStars")
                        .HasColumnType("int");

                    b.Property<int>("WeaponType")
                        .HasColumnType("int");

                    b.HasKey("CharactersId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("GenshinApplication.Models.Constelation", b =>
                {
                    b.Property<Guid>("ConstelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharactersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConstelationId");

                    b.HasIndex("CharactersId")
                        .IsUnique();

                    b.ToTable("Constelation");
                });

            modelBuilder.Entity("GenshinApplication.Models.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GenshinApplication.Models.Weapon", b =>
                {
                    b.Property<Guid>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Effect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stars")
                        .HasColumnType("int");

                    b.HasKey("WeaponId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("GenshinApplication.Models.Build", b =>
                {
                    b.HasOne("GenshinApplication.Models.Characters", null)
                        .WithMany("Build")
                        .HasForeignKey("CharactersId");

                    b.HasOne("GenshinApplication.Models.Artifacts", "Circlet")
                        .WithMany()
                        .HasForeignKey("CircletArtifactsId");

                    b.HasOne("GenshinApplication.Models.Artifacts", "Flower")
                        .WithMany()
                        .HasForeignKey("FlowerArtifactsId");

                    b.HasOne("GenshinApplication.Models.Artifacts", "Goblet")
                        .WithMany()
                        .HasForeignKey("GobletArtifactsId");

                    b.HasOne("GenshinApplication.Models.Artifacts", "Plume")
                        .WithMany()
                        .HasForeignKey("PlumeArtifactsId");

                    b.HasOne("GenshinApplication.Models.Artifacts", "Sands")
                        .WithMany()
                        .HasForeignKey("SandsArtifactsId");

                    b.HasOne("GenshinApplication.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId");

                    b.Navigation("Circlet");

                    b.Navigation("Flower");

                    b.Navigation("Goblet");

                    b.Navigation("Plume");

                    b.Navigation("Sands");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("GenshinApplication.Models.Constelation", b =>
                {
                    b.HasOne("GenshinApplication.Models.Characters", "Characters")
                        .WithOne("Constelation")
                        .HasForeignKey("GenshinApplication.Models.Constelation", "CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Characters");
                });

            modelBuilder.Entity("GenshinApplication.Models.Characters", b =>
                {
                    b.Navigation("Build");

                    b.Navigation("Constelation");
                });
#pragma warning restore 612, 618
        }
    }
}
